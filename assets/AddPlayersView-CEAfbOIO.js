import{r as w,a as d,o as m,c as p,b as o,w as _,F as N,E as T,d as b,e as F,t as k,D as S,u as V,A as D,f as B,g as I,_ as C}from"./index-BwNP4WbW.js";const R={__name:"AddPlayers",setup(f){const r=w({player_names:""}),i=d("新玩家"),y=d("每行一个玩家昵称，不含空格"),h=d("添加"),g=d("输入管理员口令"),v=d("至少输入一个新玩家名");function A(e){let a="";return e.added.length>0&&(a+=`
${e.added.length}名玩家已添加: ${e.added}`),e.duplicated.length>0&&(a+=`
${e.duplicated.length}名玩家昵称已存在: ${e.duplicated}`),e.invalid.length>0&&(a+=`
${e.invalid.length}名玩家昵称格式错误: ${e.invalid}`),a}function x(){P(r.player_names)}function P(e){const a=e.split(`
`).map(t=>t.trim());let c=new Set,n=[];for(let t of a)t!=""&&!c.has(t)&&(n.push(t),c.add(t));if(n.length==0){alert(`${v.value}`);return}const s=prompt(g.value);if(s==null||s==null)return;const u={action:"add_players",token:s,player_names:n};S("AddNewPlayers: ",u);const{data:l,onFetchResponse:$,onFetchError:E}=V(D).post(u).json();$(t=>{console.log("Success: ",l.value,t),alert(`请求成功: ${A(l.value)}`)}),E(t=>{console.error("Error: ",l.value,t),alert(`无法添加玩家: ${JSON.stringify(l.value)}`)})}return(e,a)=>{const c=B,n=T,s=b,u=I;return m(),p(N,null,[o(s,{model:r,"label-width":"auto"},{default:_(()=>[o(n,{label:i.value},{default:_(()=>[o(c,{modelValue:r.player_names,"onUpdate:modelValue":a[0]||(a[0]=l=>r.player_names=l),type:"textarea",rows:10,placeholder:y.value},null,8,["modelValue","placeholder"])]),_:1},8,["label"])]),_:1},8,["model"]),o(n,null,{default:_(()=>[o(u,{type:"primary",onClick:x},{default:_(()=>[F(k(h.value),1)]),_:1})]),_:1})],64)}}},H={};function L(f,r){const i=R;return m(),p("main",null,[o(i)])}const G=C(H,[["render",L]]);export{G as default};
